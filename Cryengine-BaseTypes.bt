//------------------------------------------------
//--- 010 Editor v13.0.2 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------
#ifndef BASETYPES_H
#define BASETYPES_H

struct VECTOR3 {
    float x;
    float y;
    float z;
};

struct VECTOR3SHORT {
    hfloat x;
    hfloat y;
    hfloat z;
};

struct VECTOR3CRYHALF {
    ushort x;
    ushort y;
    ushort z;
};

struct VECTOR4 {
    float x;
    float y;
    float z;
    float w;
};

struct VECTOR4SHORT {
    hfloat x;
    hfloat y;
    hfloat z;
    hfloat w;
};

typedef short snorm <read=Read_SNORM>;
typedef ushort unorm <read=Read_UNORM>;
typedef byte bnorm <read=Read_BNORM>;

string Read_SNORM(short s) {
    string t;
    float f = Max(s/32767.0, -1.0);
    SPrintf( t, "%g", f );
    return t;
};

string Read_UNORM(ushort s) {
    string t;
    float f = s/65535.0;
    SPrintf( t, "%g", f );
    return t;
};

string Read_BNORM(byte s) {
    string t;
    float f = s/127.0;
    SPrintf( t, "%g", f );
    return t;
};

struct VECTOR3SNORM {
    snorm x;
    snorm y;
    snorm z;
};

struct VECTOR4SNORM {
    snorm x;
    snorm y;
    snorm z;
    snorm w;
};

struct VECTOR4BNORM {
    bnorm x;
    bnorm y;
    bnorm z;
    bnorm w;
};

struct VECTOR4UNORM {
    unorm x;
    unorm y;
    unorm z;
    unorm w;
};

struct QUATERNION {
    float x;
    float y;
    float z;
    float w;
};

struct CRYHALF {
    ushort x;
    ushort y;
};

struct CRYNORMAL {
    short x;
    short y;
};

struct MATRIX3x4 {
    float M11;
    float M12;
    float M13;
    float M14;
    float M21;
    float M22;
    float M23;
    float M24;
    float M31;
    float M32;
    float M33;
    float M34;
};

struct MATRIX3x3 {
    float M11;
    float M12;
    float M13;
    float M21;
    float M22;
    float M23;
    float M31;
    float M32;
    float M33;
};

struct MATRIX4x4 {
    float M11;
    float M12;
    float M13;
    float M14;
    float M21;
    float M22;
    float M23;
    float M24;
    float M31;
    float M32;
    float M33;
    float M34;
    float M41;
    float M42;
    float M43;
    float M44;
};

struct IRGBA {
    ubyte r;
    ubyte g;
    ubyte b;
    ubyte a;
};

struct UV {
    float u;
    float v;
};

struct UVHALF {
    hfloat u;
    hfloat v;
};

struct QTANGENT {
    short x;
    short y;
    short z;
    short w;
};

struct COLOR {
    ubyte red;
    ubyte green;
    ubyte blue;
    ubyte alpha;
};

struct COLORB {
    float red;
    float green;
    float blue;
    int flag;
};

struct TANGENT_BYTE {
    byte x;
    byte y;
    byte z;
    byte w;
};

#endif
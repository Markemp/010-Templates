//------------------------------------------------
//--- 010 Editor v13.0.2 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

#ifndef ENUMS_IVO_H
#define ENUMS_IVO_H

#include "Cryengine-Enums.bt"
#include "Cryengine-Structs.bt"

enum <uint> CHUNKTYPE {
    Skeleton1               = 0x0000300d,
    DBAData                 = 0x194fbc50,
    Skeleton                = 0x1bbc4103,
    BShapes                 = 0xf5c6eb5b,
    BShapesGPU              = 0x57a3befd,
    MaterialName            = 0x8335674e,
    MaterialName320         = 0x83353333,
    BShapes3                = 0x875ccb28,
    CompiledPhysicalBones   = 0x90c687dc,
    MeshChunk320            = 0x92914444,
    MeshChunk               = 0x9293b9d8,
    SkinMesh                = 0xb875b2d9,
    SkinMesh2               = 0xb8757777,
    CompiledBones           = 0xc201973c,
    CompiledBones320        = 0xc2011111,
    DBA                     = 0xf7351608
};

enum <uint> DatastreamType {
    IvoNormals2 = 0x38A581FE, // [6], size 04h
    IvoBoneMap = 0x677C7B23, // [4], size 0ch
    IvoBoneMap32 = 0x6ECA3708, // [5], size 18h
    IvoVertsUvs = 0x91329AE9, // [0], size 14h
    IvoNormals = 0x9CF3F615, // [1], size 04h
    IvoTangents = 0xB95E9A1B, // [3], size 08h
    IvoColors2 = 0xD9EED421, // [2], size 04h
    IvoIndices = 0xEECDC168, // Does exist, oddly is inlined
    IvoVertsUvsCGF = 0xB3A70D5E, // [7], size 0ch
    IvoUnknown2 = 0xEE057252, // [8], size 08h
    IvoUnknown3 = 0x9D51C5EE, // [9], size 02h
    IvoUnknown4 = 0xA596C0E6, // [10], size 0ch
    IvoUnknown5 = 0x7E216CAB, // [11], size 0ch
    IvoUnknown6 = 0x69655CD8, // [12], size 04h
    IvoUnknown7 = 0xDA86BE9C, // [13], size 10h
};

// Check if value is in a given enum. 
int isInEnum(DatastreamType type) {
    local int found = false;
    switch(type){
        case IvoNormals2: 
        case IvoBoneMap: 
        case IvoBoneMap32: 
        case IvoVertsUvs: 
        case IvoNormals: 
        case IvoTangents: 
        case IvoColors2: 
        case IvoIndices: 
        case IvoVertsUvsCGF: 
        case IvoUnknown2:
        case IvoUnknown3:
        case IvoUnknown4:
        case IvoUnknown5:
        case IvoUnknown6:
        case IvoUnknown7:
            found = true; 
            break;
    }
    return found;
};

#endif